# This AWS SAM template has been generated from your function's 
# configuration. If your function has one or more triggers, note 
# that the AWS resources associated with these triggers aren't fully 
# specified in this template and include placeholder values.Open this template 
# in AWS Application Composer or your favorite IDE and modify 
# it to specify a serverless application with other AWS resources. 
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Specification template describing your function.
Resources:
  rekonObject:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      EphemeralStorage:
        Size: 512
      Events:
        BucketEvent1:
          Type: S3
          Properties:
            Bucket:
              Ref: Bucket1
            Events:
              - s3:ObjectCreated:*
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      SnapStart:
        ApplyOn: None
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-central-1:837614956853:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:eu-central-1:837614956853:log-group:/aws/lambda/rekonObject:*
            - Effect: Allow
              Action:
                - rekognition:*
              Resource: '*'
            - Action:
                - dynamodb:*
                - dax:*
                - application-autoscaling:DeleteScalingPolicy
                - application-autoscaling:DeregisterScalableTarget
                - application-autoscaling:DescribeScalableTargets
                - application-autoscaling:DescribeScalingActivities
                - application-autoscaling:DescribeScalingPolicies
                - application-autoscaling:PutScalingPolicy
                - application-autoscaling:RegisterScalableTarget
                - cloudwatch:DeleteAlarms
                - cloudwatch:DescribeAlarmHistory
                - cloudwatch:DescribeAlarms
                - cloudwatch:DescribeAlarmsForMetric
                - cloudwatch:GetMetricStatistics
                - cloudwatch:ListMetrics
                - cloudwatch:PutMetricAlarm
                - cloudwatch:GetMetricData
                - datapipeline:ActivatePipeline
                - datapipeline:CreatePipeline
                - datapipeline:DeletePipeline
                - datapipeline:DescribeObjects
                - datapipeline:DescribePipelines
                - datapipeline:GetPipelineDefinition
                - datapipeline:ListPipelines
                - datapipeline:PutPipelineDefinition
                - datapipeline:QueryObjects
                - ec2:DescribeVpcs
                - ec2:DescribeSubnets
                - ec2:DescribeSecurityGroups
                - iam:GetRole
                - iam:ListRoles
                - kms:DescribeKey
                - kms:ListAliases
                - sns:CreateTopic
                - sns:DeleteTopic
                - sns:ListSubscriptions
                - sns:ListSubscriptionsByTopic
                - sns:ListTopics
                - sns:Subscribe
                - sns:Unsubscribe
                - sns:SetTopicAttributes
                - lambda:CreateFunction
                - lambda:ListFunctions
                - lambda:ListEventSourceMappings
                - lambda:CreateEventSourceMapping
                - lambda:DeleteEventSourceMapping
                - lambda:GetFunctionConfiguration
                - lambda:DeleteFunction
                - resource-groups:ListGroups
                - resource-groups:ListGroupResources
                - resource-groups:GetGroup
                - resource-groups:GetGroupQuery
                - resource-groups:DeleteGroup
                - resource-groups:CreateGroup
                - tag:GetResources
                - kinesis:ListStreams
                - kinesis:DescribeStream
                - kinesis:DescribeStreamSummary
              Effect: Allow
              Resource: '*'
            - Action:
                - cloudwatch:GetInsightRuleReport
              Effect: Allow
              Resource: arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*
            - Action:
                - iam:PassRole
              Effect: Allow
              Resource: '*'
              Condition:
                StringLike:
                  iam:PassedToService:
                    - application-autoscaling.amazonaws.com
                    - application-autoscaling.amazonaws.com.cn
                    - dax.amazonaws.com
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: '*'
              Condition:
                StringEquals:
                  iam:AWSServiceName:
                    - replication.dynamodb.amazonaws.com
                    - dax.amazonaws.com
                    - dynamodb.application-autoscaling.amazonaws.com
                    - contributorinsights.dynamodb.amazonaws.com
                    - kinesisreplication.dynamodb.amazonaws.com
            - Effect: Allow
              Action:
                - s3:*
                - s3-object-lambda:*
              Resource: '*'
  Bucket1:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  BucketPolicy1:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: Bucket1
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Deny
            Principal: '*'
            Resource:
              - arn:aws:s3:::Bucket1/*
              - arn:aws:s3:::Bucket1
            Condition:
              Bool:
                aws:SecureTransport: false
